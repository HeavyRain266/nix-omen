snippet_support = false
verbosity = 2

[server]
timeout = 1800 # seconds = 30 minutes

[language.c_cpp]
filetypes = ["c", "cpp"]
roots = ["compile_commands.json", ".clangd", ".git", ".hg"]
command = "clangd"
offset_encoding = "utf-8"

[language.css]
filetypes = ["css"]
roots = ["package.json", ".git", ".hg"]
command = "css-languageserver"
args = ["--stdio"]

[language.scss]
filetypes = ["scss"]
roots = ["package.json", ".git", ".hg"]
command = "css-languageserver"
args = ["--stdio"]

[language.go]
filetypes = ["go"]
roots = ["Gopkg.toml", "go.mod", ".git", ".hg"]
command = "gopls"
offset_encoding = "utf-8"
settings_section = "gopls"

[language.html]
filetypes = ["html"]
roots = ["package.json"]
command = "html-languageserver"
args = ["--stdio"]

[language.javascript]
filetypes = ["javascript"]
roots = [".flowconfig"]
command = "flow"
args = ["lsp"]

[language.lua]
filetypes = ["lua"]
roots = [".git", ".hg"]
command = "lua-language-server"

[language.nix]
filetypes = ["nix"]
roots = ["flake.nix", "shell.nix", ".git", ".hg"]
command = "rnix-lsp"

# [language.ocaml]
# filetypes = ["ocaml"]
# roots = ["Makefile", "opam", "*.opam", "dune"]
# command = "ocamllsp"

[language.python]
filetypes = ["python"]
roots = ["requirements.txt", "setup.py", ".git", ".hg"]
command = "pyls"
offset_encoding = "utf-8"
workaround_server_sends_plaintext_labeled_as_markdown = true

# [language.reason]
# filetypes = ["reason"]
# roots = ["package.json", "Makefile", ".git", ".hg"]
# command = "ocamllsp"

[language.ruby]
filetypes = ["ruby"]
roots = ["Gemfile"]
command = "solargraph"
args = ["stdio"]

[language.rust]
filetypes = ["rust"]
roots = ["Cargo.toml"]
command = "rust-analyzer"
[language.rust.settings.rust-analyzer]
checkOnSave.command = "clippy"

# Semantic tokens support
# See https://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_semanticTokens
# for the default list of tokens and modifiers.
# However, many language servers implement their own values.
# Make sure to check the output of `lsp-capabilities` and each server's documentation and source code as well.
# Examples:
# - TypeScript: https://github.com/microsoft/vscode-languageserver-node/blob/2645fb54ea1e764aff71dee0ecc8aceff3aabf56/client/src/common/semanticTokens.ts#L58
# - Rust Analyzer: https://github.com/rust-analyzer/rust-analyzer/blob/f6da603c7fe56c19a275dc7bab1f30fe1ad39707/crates/ide/src/syntax_highlighting.rs#L42
[[semantic_tokens]]
token = "comment"
face = "documentation"
modifiers = ["documentation"]

[[semantic_tokens]]
token = "comment"
face = "comment"

[[semantic_tokens]]
token = "function"
face = "function"

[[semantic_tokens]]
token = "keyword"
face = "keyword"

[[semantic_tokens]]
token = "namespace"
face = "module"

[[semantic_tokens]]
token = "operator"
face = "operator"

[[semantic_tokens]]
token = "string"
face = "string"

[[semantic_tokens]]
token = "type"
face = "type"

[[semantic_tokens]]
token = "variable"
face = "default+d"
modifiers = ["readonly"]

[[semantic_tokens]]
token = "variable"
face = "default+d"
modifiers = ["constant"]

[[semantic_tokens]]
token = "variable"
face = "variable"
